// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone'], function(Backbone) {
    var Files, ProjectLocale;
    ProjectLocale = (function(_super) {

      __extends(ProjectLocale, _super);

      function ProjectLocale() {
        return ProjectLocale.__super__.constructor.apply(this, arguments);
      }

      ProjectLocale.prototype.url = function() {
        return "/api/project_locales/" + this.id;
      };

      return ProjectLocale;

    })(Backbone.Model);
    return Files = (function(_super) {

      __extends(Files, _super);

      function Files() {
        return Files.__super__.constructor.apply(this, arguments);
      }

      Files.prototype.url = function() {
        return "/api/po_files/" + this.projectID;
      };

      Files.prototype.initialize = function(option) {
        var projectLocale;
        this.projectID = option.projectID;
        this.localeID = option.localeID;
        projectLocale = new ProjectLocale({
          id: this.projectID
        });
        projectLocale.fetch();
        return projectLocale.on('sync', function() {
          return console.log(projectLocale.toJSON());
        });
      };

      return Files;

    })(Backbone.Collection);
  });

}).call(this);
