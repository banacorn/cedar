// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone'], function(Backbone) {
    var Model;
    return Model = (function(_super) {

      __extends(Model, _super);

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.url = 'http://itswindtw.info:9001/api/users/sign_in';

      Model.prototype.initialize = function() {};

      Model.prototype.defaults = {
        'authorized': void 0
      };

      Model.prototype.parse = function(data) {
        console.log(data);
        if (data != null) {
          this.set('authorized', true);
        } else {
          this.set('authorized', false);
        }
        return data;
      };

      Model.prototype.authorize = function(callback) {
        var authorized,
          _this = this;
        if (callback != null) {
          authorized = Backbone.account.get('authorized');
          if (authorized != null) {
            callback(authorized);
          } else {
            console.log('undecided');
            Backbone.once('authorized', function() {
              return callback(true);
            });
            Backbone.once('unauthorized', function() {
              return callback(false);
            });
          }
        }
        this.on('sync', function() {
          authorized = this.get('authorized');
          this.set('authorized', authorized);
          return Backbone.trigger('authorized');
        });
        return this.fetch({
          xhrFields: {
            withCredentials: true
          },
          error: function() {
            return _this.set('authorized', false);
          }
        });
      };

      Model.prototype.signin = function(username, password) {
        var _this = this;
        return this.fetch({
          data: JSON.stringify({
            login: username,
            password: password,
            remember_me: 0
          }),
          type: 'POST',
          xhrFields: {
            withCredentials: true
          },
          contentType: 'application/json; charset=utf-8',
          success: function() {
            console.log(arguments);
            _this.set('authorized', true);
            return Backbone.trigger('authorized');
          },
          error: function() {
            _this.set('authorized', false);
            return Backbone.trigger('authorization failed');
          }
        });
      };

      Model.prototype.signout = function() {
        var _this = this;
        return this.fetch({
          url: 'http://itswindtw.info:9001/api/users/sign_out',
          type: 'DELETE',
          xhrFields: {
            withCredentials: true
          },
          success: function() {
            _this.set('authorized', false);
            return Backbone.trigger('unauthorized');
          },
          error: function() {
            return _this.set('authorized', false);
          }
        });
      };

      return Model;

    })(Backbone.Model);
  });

}).call(this);
