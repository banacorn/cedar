// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone'], function(_, Backbone) {
    var Model;
    return Model = (function(_super) {

      __extends(Model, _super);

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.url = 'http://itswindtw.info:9001/api/users';

      Model.prototype.defaults = {
        user: {
          username: void 0,
          email: void 0,
          password: void 0,
          passwordConfirmation: 'fuck you'
        }
      };

      Model.prototype.validate = function(attr) {
        var user;
        user = attr.user;
        if (user.username.length < 3) {
          return "username too short";
        }
        if (user.password !== user.passwordConfirmation) {
          return "password confirmation mismatched";
        }
        if (user.password.length < 6) {
          return "password too short";
        }
      };

      Model.prototype.parse = function(result) {
        if (result.success) {
          console.log('success');
          console.log(result);
          return this.trigger('success', this);
        } else {
          if (_.contains(result.errors, 'Username has already been taken')) {
            this.trigger('error', this, 'username taken');
          }
          if (_.contains(result.errors, 'Email has already been taken')) {
            return this.trigger('error', this, 'email taken');
          }
        }
      };

      return Model;

    })(Backbone.Model);
  });

}).call(this);
