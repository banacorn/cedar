// Generated by CoffeeScript 1.4.0
(function() {

  define(['backbone'], function(Backbone) {
    return function(method, model, options) {
      var data, url;
      console.log(method, model.toJSON());
      if (typeof model.url === 'function') {
        url = model.url();
      } else {
        url = model.url;
      }
      switch (method) {
        case 'read':
          model.on('reset', function() {
            return localStorage[url] = JSON.stringify(model.toJSON());
          });
          if ((typeof localStorage !== "undefined" && localStorage !== null ? localStorage[url] : void 0) != null) {
            data = JSON.parse(localStorage[url]);
            if (model instanceof Backbone.Collection) {
              model.reset(data);
            }
            if (model instanceof Backbone.Model) {
              return model.set(data);
            }
          }
          break;
        case 'create':
          return typeof localStorage !== "undefined" && localStorage !== null ? localStorage[url] = JSON.stringify(model.toJSON()) : void 0;
        case 'update':
          return typeof localStorage !== "undefined" && localStorage !== null ? localStorage[url] = JSON.stringify(model.toJSON()) : void 0;
      }
    };
  });

}).call(this);
