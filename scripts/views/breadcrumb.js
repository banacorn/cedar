// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'template', 'router', 'model'], function($, _, Backbone, template, router, model) {
    var Breadcrumb;
    return Breadcrumb = (function(_super) {

      __extends(Breadcrumb, _super);

      function Breadcrumb() {
        return Breadcrumb.__super__.constructor.apply(this, arguments);
      }

      Breadcrumb.prototype.el = $(window);

      Breadcrumb.prototype.$breadcrumb = $('#breadcrumb-container');

      Breadcrumb.prototype.events = {
        'scroll': 'scroll'
      };

      Breadcrumb.prototype.initialize = function() {};

      Breadcrumb.prototype.scroll = function() {
        var scrollTop;
        scrollTop = this.$el.scrollTop();
        console.log(this.model.get('active'));
        if (scrollTop > 40 && this.model.get('active')) {
          $('#breadcrumb-container').addClass('fixed');
          return $('#main-container').addClass('fixed');
        } else {
          $('#breadcrumb-container').removeClass('fixed');
          return $('#main-container').removeClass('fixed');
        }
      };

      Breadcrumb.prototype.initialize = function() {
        var _this = this;
        this.template = template.breadcrumb;
        this.model = new model.Breadcrumb;
        router.on('route:project:home', function(name) {
          _this.model.set('active', true);
          return _this.$breadcrumb.html(_this.template.render({
            project: true,
            projectName: name,
            home: true
          }));
        });
        router.on('route:project:entry', function(name) {
          _this.model.set('active', true);
          return _this.$breadcrumb.html(_this.template.render({
            project: true,
            projectName: name,
            entry: true
          }));
        });
        router.on('route:project:user', function(name) {
          _this.model.set('active', true);
          return _this.$breadcrumb.html(_this.template.render({
            projectName: name,
            project: true,
            user: true
          }));
        });
        return router.on('route:home', function() {
          _this.model.set('active', false);
          return _this.$breadcrumb.html(_this.template.render({
            breadcrumb: false,
            paths: _this.model.home()
          }));
        });
        /*     
        router.on 'route:project', (name) =>
            @model.set 'active'
            @$breadcrumb.html @template.render
                breadcrumb: false
                paths: @model.project name
        */

      };

      return Breadcrumb;

    })(Backbone.View);
  });

}).call(this);
