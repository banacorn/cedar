// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['models/entry', 'jquery', 'backbone', 'template'], function(ModelEntry, $, Backbone, $$) {
    var EntryList, EntryView;
    EntryView = (function(_super) {

      __extends(EntryView, _super);

      function EntryView() {
        return EntryView.__super__.constructor.apply(this, arguments);
      }

      EntryView.prototype.events = {
        'click .entry-translation': 'edit',
        'blur .entry-input input': 'blur',
        'submit .entry-input form': 'submit'
      };

      EntryView.prototype.submit = function() {
        var val;
        val = $('.entry-input input', this.el).val();
        console.log('submit', val);
        $('.entry-translation', this.el).text(val);
        this.blur();
        return false;
      };

      EntryView.prototype.edit = function() {
        $('.entry-translation', this.el).hide();
        $('.entry-input', this.el).show();
        return setTimeout(function() {
          return $('.entry-input input', this.el).focus().select();
        }, 0);
      };

      EntryView.prototype.blur = function() {
        $('.entry-translation', this.el).show();
        return $('.entry-input', this.el).hide();
      };

      EntryView.prototype.initialize = function() {
        this.template = $$.entry;
        return this.status = new ModelEntry;
      };

      EntryView.prototype.render = function() {
        var model;
        model = this.model.toJSON();
        return this.$el.html(this.template.render({
          urn: Backbone.history.fragment,
          translation: model.translation,
          context: model.context,
          id: model.id
        }));
      };

      return EntryView;

    })(Backbone.View);
    return EntryList = (function(_super) {

      __extends(EntryList, _super);

      function EntryList() {
        return EntryList.__super__.constructor.apply(this, arguments);
      }

      EntryList.prototype.initialize = function() {
        var _this = this;
        this.collection.on('reset', function() {
          return _this.render();
        });
        return this.template = $$.entrylist;
      };

      EntryList.prototype.render = function() {
        var entries,
          _this = this;
        entries = this.collection.toJSON().map(function(entry) {
          entry.context = entry.msgid[0].slice(1, -1);
          entry.translation = entry.msgstr[0].slice(1, -1);
          return entry;
        });
        this.$el.html(this.template.render({
          entries: entries
        }));
        return entries.forEach(function(entry) {
          var model, view;
          model = new ModelEntry(entry);
          view = new EntryView({
            model: model
          });
          return _this.assign(view, "#entry-" + entry.id);
        });
      };

      return EntryList;

    })(Backbone.View);
  });

}).call(this);
