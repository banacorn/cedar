// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'template', 'model'], function($, _, Backbone, template, model) {
    var Box, Login;
    Box = (function(_super) {

      __extends(Box, _super);

      function Box() {
        return Box.__super__.constructor.apply(this, arguments);
      }

      Box.prototype.events = {
        'click': 'resume',
        'click #login-box': 'click'
      };

      Box.prototype.initialize = function() {
        return this.template = template.login;
      };

      Box.prototype.resume = function() {
        console.log('resume');
        return this.remove();
      };

      Box.prototype.click = function() {
        return false;
      };

      Box.prototype.render = function() {
        console.log(this.el);
        this.$el.html(this.template.render());
        return this;
      };

      return Box;

    })(Backbone.View);
    Login = (function(_super) {

      __extends(Login, _super);

      function Login() {
        return Login.__super__.constructor.apply(this, arguments);
      }

      Login.prototype.el = $('#login');

      Login.prototype.initialize = function() {
        return this.template = template.login;
      };

      Login.prototype.events = {
        'click': 'login'
      };

      Login.prototype.login = function() {
        this.box = new Box;
        $('#main').append('<div id="slot"></div>');
        return this.assign(this.box, '#slot');
      };

      return Login;

    })(Backbone.View);
    return Login;
  });

}).call(this);
