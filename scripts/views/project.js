// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['collections/filetree', 'collections/project', 'models/project/breadcrumb', 'views/project/breadcrumb', 'views/project/browser', 'jquery', 'backbone', 'template'], function(CollectionFiletree, CollectionProject, ModelProjectBreadcrumb, ViewProjectBreadcrumb, ViewProjectBrowser, $, Backbone, $$) {
    var Project;
    return Project = (function(_super) {

      __extends(Project, _super);

      function Project() {
        return Project.__super__.constructor.apply(this, arguments);
      }

      Project.prototype.el = $('#main');

      Project.prototype.initialize = function() {};

      Project.prototype.render = function(name, path) {
        var projects,
          _this = this;
        projects = new CollectionProject;
        return projects.snatch(function() {
          var breadcrumb, project;
          project = projects.where({
            name: name
          })[0];
          project.explore();
          _this.$el.html($$.project.render({
            projectName: project.get('name'),
            projectInfo: project.get('info')
          }));
          breadcrumb = new ViewProjectBreadcrumb({
            path: path,
            projectName: name
          });
          return _this.assign(breadcrumb, '#project-breadcrumb');
        });
      };

      return Project;

    })(Backbone.View);
  });

}).call(this);
