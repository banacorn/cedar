// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['collections/project', 'jquery', 'backbone', 'template'], function(CollectionProject, $, Backbone, $$) {
    var ProjectList;
    return ProjectList = (function(_super) {

      __extends(ProjectList, _super);

      function ProjectList() {
        return ProjectList.__super__.constructor.apply(this, arguments);
      }

      ProjectList.prototype.tagName = 'article';

      ProjectList.prototype.id = 'project-list';

      ProjectList.prototype.template = $$.projectList;

      ProjectList.prototype.initialize = function() {
        this.collection = new CollectionProject;
        this.listenTo(this.collection, 'get', this.renderList);
        this.collection.fetch();
        return this.render();
      };

      ProjectList.prototype.render = function() {
        return this.$el.html(this.template.render());
      };

      ProjectList.prototype.renderList = function() {
        console.log('got list');
        return console.log(this.collection.toJSON());
      };

      return ProjectList;

    })(Backbone.View);
  });

}).call(this);
